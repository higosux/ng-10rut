import { __decorate } from "tslib";
import { Directive, EventEmitter, Output } from '@angular/core';
import * as rutHelpers from 'rut-helpers';
var RutDirective = /** @class */ (function () {
    function RutDirective() {
        this.rutChange = new EventEmitter();
    }
    RutDirective.prototype.onFocus = function (ev) {
        var htmlInputElement = ev.target;
        htmlInputElement.value = rutHelpers.rutClean(htmlInputElement.value);
    };
    RutDirective.prototype.onBlur = function (ev) {
        var htmlInputElement = ev.target;
        htmlInputElement.value = rutHelpers.rutFormat(htmlInputElement.value) || '';
    };
    RutDirective.prototype.onChange = function (ev) {
        var htmlInputElement = ev.target;
        this.rutChange.emit(rutHelpers.rutClean(htmlInputElement.value));
    };
    __decorate([
        Output()
    ], RutDirective.prototype, "rutChange", void 0);
    RutDirective = __decorate([
        Directive({
            selector: '[formatRut]',
            host: {
                '(blur)': 'onBlur($event)',
                '(focus)': 'onFocus($event)',
                '(input)': 'onChange($event)',
            },
        })
    ], RutDirective);
    return RutDirective;
}());
export { RutDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnV0LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nOS1ydXQvIiwic291cmNlcyI6WyJsaWIvcnV0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sS0FBSyxVQUFVLE1BQU0sYUFBYSxDQUFDO0FBVTFDO0lBR0U7UUFDRSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFDdEMsQ0FBQztJQUVNLDhCQUFPLEdBQWQsVUFBZSxFQUFTO1FBQ3RCLElBQUksZ0JBQWdCLEdBQXdDLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDdEUsZ0JBQWdCLENBQUMsS0FBSyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkUsQ0FBQztJQUVNLDZCQUFNLEdBQWIsVUFBYyxFQUFTO1FBQ3JCLElBQUksZ0JBQWdCLEdBQXdDLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDdEUsZ0JBQWdCLENBQUMsS0FBSyxHQUFHLFVBQVUsQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzlFLENBQUM7SUFFTSwrQkFBUSxHQUFmLFVBQWdCLEVBQVM7UUFDdkIsSUFBSSxnQkFBZ0IsR0FBd0MsRUFBRSxDQUFDLE1BQU0sQ0FBQztRQUN0RSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDbkUsQ0FBQztJQW5CUztRQUFULE1BQU0sRUFBRTttREFBcUM7SUFEbkMsWUFBWTtRQVJ4QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsYUFBYTtZQUN2QixJQUFJLEVBQUU7Z0JBQ0osUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIsU0FBUyxFQUFFLGlCQUFpQjtnQkFDNUIsU0FBUyxFQUFFLGtCQUFrQjthQUM5QjtTQUNGLENBQUM7T0FDVyxZQUFZLENBcUJ4QjtJQUFELG1CQUFDO0NBQUEsQUFyQkQsSUFxQkM7U0FyQlksWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgKiBhcyBydXRIZWxwZXJzIGZyb20gJ3J1dC1oZWxwZXJzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2Zvcm1hdFJ1dF0nLFxuICBob3N0OiB7XG4gICAgJyhibHVyKSc6ICdvbkJsdXIoJGV2ZW50KScsXG4gICAgJyhmb2N1cyknOiAnb25Gb2N1cygkZXZlbnQpJyxcbiAgICAnKGlucHV0KSc6ICdvbkNoYW5nZSgkZXZlbnQpJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgUnV0RGlyZWN0aXZlIHtcbiAgQE91dHB1dCgpIHB1YmxpYyBydXRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMucnV0Q2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICB9XG5cbiAgcHVibGljIG9uRm9jdXMoZXY6IEV2ZW50KSB7XG4gICAgbGV0IGh0bWxJbnB1dEVsZW1lbnQ6IEhUTUxJbnB1dEVsZW1lbnQgPSA8SFRNTElucHV0RWxlbWVudD4gZXYudGFyZ2V0O1xuICAgIGh0bWxJbnB1dEVsZW1lbnQudmFsdWUgPSBydXRIZWxwZXJzLnJ1dENsZWFuKGh0bWxJbnB1dEVsZW1lbnQudmFsdWUpO1xuICB9XG5cbiAgcHVibGljIG9uQmx1cihldjogRXZlbnQpIHtcbiAgICBsZXQgaHRtbElucHV0RWxlbWVudDogSFRNTElucHV0RWxlbWVudCA9IDxIVE1MSW5wdXRFbGVtZW50PiBldi50YXJnZXQ7XG4gICAgaHRtbElucHV0RWxlbWVudC52YWx1ZSA9IHJ1dEhlbHBlcnMucnV0Rm9ybWF0KGh0bWxJbnB1dEVsZW1lbnQudmFsdWUpIHx8ICcnO1xuICB9XG5cbiAgcHVibGljIG9uQ2hhbmdlKGV2OiBFdmVudCkge1xuICAgIGxldCBodG1sSW5wdXRFbGVtZW50OiBIVE1MSW5wdXRFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+IGV2LnRhcmdldDtcbiAgICB0aGlzLnJ1dENoYW5nZS5lbWl0KHJ1dEhlbHBlcnMucnV0Q2xlYW4oaHRtbElucHV0RWxlbWVudC52YWx1ZSkpO1xuICB9XG59XG4iXX0=