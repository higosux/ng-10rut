{"version":3,"file":"ng9-rut.js","sources":["ng://ng9-rut/lib/ng9-rut.service.ts","ng://ng9-rut/lib/rut.pipe.ts","ng://ng9-rut/lib/rut.directive.ts","ng://ng9-rut/lib/rut.validator.ts","ng://ng9-rut/lib/rut-value-accessor.ts","ng://ng9-rut/lib/ng9-rut.module.ts","ng://ng9-rut/public-api.ts","ng://ng9-rut/ng9-rut.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Ng9RutService {\n\n  constructor() { }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { rutFormat } from 'rut-helpers';\n\n@Pipe({\n  name: 'rut',\n})\nexport class RutPipe implements PipeTransform {\n  public transform(value: string): string {\n    return rutFormat(value);\n  }\n}\n","import {Directive, EventEmitter, Output} from '@angular/core';\nimport * as rutHelpers from 'rut-helpers';\n\n@Directive({\n  selector: '[formatRut]',\n  host: {\n    '(blur)': 'onBlur($event)',\n    '(focus)': 'onFocus($event)',\n    '(input)': 'onChange($event)',\n  },\n})\nexport class RutDirective {\n  @Output() public rutChange: EventEmitter<any>;\n\n  constructor() {\n    this.rutChange = new EventEmitter();\n  }\n\n  public onFocus(ev: Event) {\n    let htmlInputElement: HTMLInputElement = <HTMLInputElement> ev.target;\n    htmlInputElement.value = rutHelpers.rutClean(htmlInputElement.value);\n  }\n\n  public onBlur(ev: Event) {\n    let htmlInputElement: HTMLInputElement = <HTMLInputElement> ev.target;\n    htmlInputElement.value = rutHelpers.rutFormat(htmlInputElement.value) || '';\n  }\n\n  public onChange(ev: Event) {\n    let htmlInputElement: HTMLInputElement = <HTMLInputElement> ev.target;\n    this.rutChange.emit(rutHelpers.rutClean(htmlInputElement.value));\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, FormControl } from '@angular/forms';\nimport { rutValidate } from 'rut-helpers';\n\nexport function validateRutFactory(rutValidate: Function) {\n  return (c: FormControl) => {    \n    if (!c.value) {\n      return null;\n    }\n    return rutValidate(c.value) ? null : { invalidRut: true };\n  };\n}\n\n@Directive({\n  selector: '[validateRut][ngModel],[validateRut][formControl]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: forwardRef(() => RutValidator), multi: true },\n  ],\n})\nexport class RutValidator {\n  private validator: Function;\n  \n  constructor() {\n    this.validator = validateRutFactory(rutValidate);\n  }\n  \n  public validate(c: FormControl) {\n    return this.validator(c);\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { rutFormat } from 'rut-helpers';\n\nimport { ElementRef, Renderer2 } from '@angular/core';\n\nconst RUT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RutValueAccessor),\n  multi: true,\n};\n\n@Directive({\n  selector: 'input[formatRut]',\n  host: {\n    '(rutChange)': 'onChange($event)',\n    '(blur)': 'onTouched($event)',\n  },\n  providers: [RUT_VALUE_ACCESSOR],\n})\nexport class RutValueAccessor implements ControlValueAccessor {\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    ) { }\n\n  public onChange: any = (_) => { /*Empty*/ };\n  public onTouched: any = () => { /*Empty*/ };\n\n  public writeValue(value: any): void {\n    let normalizedValue: string = rutFormat(value) || '';\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\n  }\n\n  public registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n  public registerOnTouched(fn: () => void): void { this.onTouched = fn; }\n}\n","import { NgModule } from '@angular/core';\nimport { RutPipe } from './rut.pipe';\nimport { RutDirective } from './rut.directive';\nimport { RutValidator } from './rut.validator';\nimport { RutValueAccessor } from './rut-value-accessor';\n\n\n\n@NgModule({\n  declarations: [\n    RutPipe,\n    RutDirective,\n    RutValidator,\n    RutValueAccessor,\n  ],\n  providers: [\n    RutValidator,\n  ],\n  exports: [\n    RutPipe,\n    RutDirective,\n    RutValidator,\n    RutValueAccessor,\n  ],\n})\nexport class Ng9RutModule { }\n","/*\n * Public API Surface of ng9-rut\n */\n\nexport * from './lib/ng9-rut.service';\nexport * from './lib/ng9-rut.module';\nexport * from './lib/rut-value-accessor';\nexport * from './lib/rut.directive';\nexport * from './lib/rut.pipe';\nexport * from './lib/rut.validator';\nexport * from 'rut-helpers';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["rutHelpers.rutClean","rutHelpers.rutFormat"],"mappings":"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"}